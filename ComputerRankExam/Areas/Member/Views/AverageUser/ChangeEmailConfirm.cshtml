@model ComputerRankExam.Areas.Member.Models.ChangeEmailConfirmViewMode
@{
    ViewBag.Title = "修改邮箱";
    Layout = null;
}

@using (Ajax.BeginForm("ChangeEmailConfirm", "AverageUser", new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "content" }))
{
    @Html.AntiForgeryToken()
    <div class="panel-header">
        修改邮箱
        <hr />
        @Html.ValidationSummary(true)
    </div>
    <div class="panel-body">
        <div class="form-horizontal">
            <div class="control-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Email, new { placeholder = "请输入有效邮箱地址" })
                    <span id="valEmail">
                        @Html.ValidationMessageFor(model => model.Email)
                    </span>
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.ValidateCode, new { @class = "control-label" })
                <div class="controls">
                    <div class="input-append">
                        @Html.TextBoxFor(model => model.ValidateCode, new { @class = "span2", placeholder = "邮箱验证码" })
                        <input id="second" type="button" class="btn" value="发送验证码" />
                        @Html.ValidationMessageFor(model => model.ValidateCode)
                    </div>
                </div>
            </div>

            <div class="control-group">
                <div class="controls">
                    <input type="submit" value="确定" class="btn" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        //发送验证码时添加cookie
        function addCookie(name, value, expiresHours) {
            var cookieString = name + "=" + escape(value);
            //判断是否设置过期时间,0代表关闭浏览器时失效
            if (expiresHours > 0) {
                var date = new Date();
                date.setTime(date.getTime() + expiresHours * 1000);
                cookieString = cookieString + ";expires=" + date.toUTCString();
            }
            document.cookie = cookieString;
        }
        //修改cookie的值
        function editCookie(name, value, expiresHours) {
            var cookieString = name + "=" + escape(value);
            if (expiresHours > 0) {
                var date = new Date();
                date.setTime(date.getTime() + expiresHours * 1000); //单位是毫秒
                cookieString = cookieString + ";expires=" + date.toGMTString();
            }
            document.cookie = cookieString;
        }
        //根据名字获取cookie的值
        function getCookieValue(name) {
            var strCookie = document.cookie;
            var arrCookie = strCookie.split("; ");
            for (var i = 0; i < arrCookie.length; i++) {
                var arr = arrCookie[i].split("=");
                if (arr[0] == name) {
                    return unescape(arr[1]);
                    break;
                } else {
                    return "";
                    break;
                }
            }

        }

        $(function () {
            $("#second").click(function () {
                sendCode($("#second"));
            });
            v = getCookieValue("secondsremained");//获取cookie值
            if (v > 0) {
                settime($("#second"));//开始倒计时
            }
        })
        //发送验证码
        function sendCode(obj) {
            var email = $("#Email").val();
            var result = isEmail();
            if (result) {
                doPostBack('@Url.Action("SendEmail", "AverageUser")', backFunc1, { "email": email });
                addCookie("secondsremained", 60, 60);//添加cookie记录,有效时间60s
                settime(obj);//开始倒计时
            }
        }
        //将手机利用ajax提交到后台的发短信接口
        function doPostBack(url, backFunc, queryParam) {
            $.ajax({
                async: false,
                cache: false,
                type: 'POST',
                url: url,// 请求的action路径
                data: queryParam,
                error: function () {// 请求失败处理函数
                },
                success: backFunc
            });
        }
        function backFunc1(data) {
            var d = $.parseJSON(data);
            alert("backFunc" + d);
            if (!d.success) {
                alert(d.msg);
            } else {//返回验证码
                alert("模拟验证码:" + d.msg);
                $("#code").val(d.msg);
            }
        }
        //开始倒计时
        var countdown;
        function settime(obj) {
            countdown = getCookieValue("secondsremained");
            if (countdown == 0) {
                obj.removeAttr("disabled");
                obj.val("发送验证码");
                return;
            } else {
                obj.attr("disabled", true);
                obj.val("重新发送(" + countdown + ")");
                countdown--;
                editCookie("secondsremained", countdown, countdown + 1);
            }
            setTimeout(function () { settime(obj) }, 1000) //每1000毫秒执行一次
        }
        //校验邮箱是否合法
        function isEmail() {
            var emial = $("#Email").val();
            var myreg = /^([a-z0-9_\.-]+)@@([\da-z\.-]+)\.([a-z\.]{2,6})$/;
            if (!myreg.test(emial)) {
                //alert('请输入有效的电子邮箱！');
                //$("#valEmail").html("请输入有效的电子邮箱！");
                $("#valEmail").html('<span class="field-validation-error">请输入邮箱地址</span>');
                return false;
            } else {
                return true;
            }
        }
    </script>
}


